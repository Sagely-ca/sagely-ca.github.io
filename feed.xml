<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sagely Go...</title>
    <description>Words of wisdom, or not; Thoughts to mull about.
</description>
    <link>http://sagely.ca/</link>
    <atom:link href="http://sagely.ca/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 06 Aug 2017 15:25:51 -0400</pubDate>
    <lastBuildDate>Sun, 06 Aug 2017 15:25:51 -0400</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Building an AWS AMI with Ansible</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have spent the past couple of weeks drinking from the firehose on AWS and it&amp;#8217;s various service offerings.  I&amp;#8217;m at the point where I need to take some of this theoretical knowledge and lab experience to build something that will actually run in production.  What better way to experiment than on pwn9.com. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first thing I want to do is to turn the Pwn9.com Minecraft server into an on-demand instance that is spun up and torn down based on whether or not any players are online.  The steps I need to take to do this are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create an EC2 instance to be the base for the MC Server AMI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Ansible to provision the EC2 instance with the required config&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create an EBS volume to store the MC data / config&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Place the Pwn9 server data on the Data volume&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run tests on the instance to ensure it works correctly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Detach the Data volume and Create the AMI&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;battle_plan&quot;&gt;Battle Plan&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am going to start by building an Amazon AMI that I can use to create the Minecraft server instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;GOOD NEWS: I already have Ansible configurations that provide me with the base configuration that I&amp;#8217;m already using on our live site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;BAD NEWS: Amazon Linux != CentOS.  Some tweaks were necessary.  Fortunately, it only took me half an hour or so to adapt.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Building the AMI consisted of running my ansible playbook against a brand new EC2 instance.  I created an instance with 2 EBS Volumes, one for the OS, and one for the game data.  The root EBS volume will be auto-destroyed when the instance is terminated, but the game data will persist.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The EBS Game Data Volume led to a bit of a challenge.  There&amp;#8217;s no way in the spot request to specify an existing EBS volume to be attached to the instance.  The only option is to attach a snapshot.  So that leaves me with a couple of options:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;When terminating each instance, create a snapshot of the extra volume, to persist the data.  Use the new snapshot on each server startup.  This doesn&amp;#8217;t feel right, because I could get out of sync if the workflow broke down.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write a script in user-data so that the instance will auto-attach the Game Data EBS Volume.  Then, the volume can be mounted.  This will all happen before the mineos process starts.  This has the advantage of having a single EBS volume that is the source of truth for the Game Data.  The drawback is that this limits which Availability Zone the instance can be spawned in.  This shouldn&amp;#8217;t be too big an issue, though it may drive up the spot price a bit if there&amp;#8217;s higher demand in that AZ.  The quick-and-dirty script I used is below.  Long-term, I will need to refactor this into something with some error handling. :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code&gt;#!/bin/bash
aws ec2 attach-volume --volume-id vol-0e9dba8af2b10f02e --instance-id `curl -s -o - http://169.254.169.254/latest/meta-data/instance-id/` --device xvdc --region us-east-1
while [ ! -e /dev/xvdc ]; do sleep 1; done
mount -a
restart mineos&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;instance_launch_termination&quot;&gt;Instance Launch / Termination&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The automated server workflow will be:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Wait for a player to connect to mc.pwn9.com, which is a t2.micro instance running bungeecord and a tiny lobby server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Player requests to connect to main minecraft server by executing a /server &amp;lt;eg: anarchy&amp;gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bungeecord plugin (custom?) checks to see if the server is up.&lt;/p&gt;
&lt;div class=&quot;olist loweralpha&quot;&gt;
&lt;ol class=&quot;loweralpha&quot; type=&quot;a&quot;&gt;
&lt;li&gt;
&lt;p&gt;If exists, connect player.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If not exists, send player a message: &quot;Hang on, we&amp;#8217;re setting it up for you!&quot;, and fire AWS API call to initate server creation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once server is ready, bungeecord informs player, and allows them to re-execute the /server &amp;lt;servername&amp;gt; command to join the newly spun up server&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use Cloudwatch to monitor the player count.  When it reaches 0 for more than 15 minutes, terminate the Spot request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Goto #1. :)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;todos&quot;&gt;TODOs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Enable auto-DNS registration&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;caveats&quot;&gt;Caveats&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A few of the things I discovered along the way:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Cost Gotchas&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;AWS charges $0.09 per GB of data transfer out.  If we assume that the average player uses 50kb/s of throughput while connected, it works out to about 1.62 cents per player hour. On a server with an average of 60 player months worth of connections, that works out to about $90 / mo in BW alone.  Something for larger servers to consider.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 01 Apr 2017 00:00:00 -0400</pubDate>
        <link>http://sagely.ca/2017/04/Building_an_AWS_AMI_with_ansible</link>
        <guid isPermaLink="true">http://sagely.ca/2017/04/Building_an_AWS_AMI_with_ansible</guid>
        
        <category>aws cloud ansible automation minecraft</category>
        
        
        <category>aws</category>
        
      </item>
    
      <item>
        <title>Amazon Web Services Certifications</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the_saga_begins&quot;&gt;The Saga Begins&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AWS.  It&amp;#8217;s big.  And scary.  And the 800 pound gorilla for the new Internet economy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For years, I have kept abreast of developments in the XaaS space.  But I never
fully wrapped my head around what AWS was doing.  I thought they were just another
Cloud Datacentre.  About a year ago, I started to understand that they were so much
more.  I think &lt;a href=&quot;https://aws.amazon.com/lambda/&quot;&gt;Lambda&lt;/a&gt; was my first real glimpse
into how drastically things were changing.  If you&amp;#8217;ve been drinking the AWS kook-aid
longer than I have, I&amp;#8217;m sure you saw the writing on the wall a long time ago.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since I&amp;#8217;m in-between employers at the moment, I thought that it would be a good idea
to get some certifications.  I had my CCNA and CCDA years ago, but let them lapse.  I
went for the CCIE-Service Provider, but just barely missed the passing mark on the practical
both times I took it.  I just never found that I had enough time / inclination to put into
studying for the practical part of the lab, as I was always working on a deal, proposal,
or whatever particular fire was going on.  So now I&amp;#8217;ve got some time on my hands and it&amp;#8217;s
extremely easy to just kick the tires on AWS, since they have a &lt;a href=&quot;https://aws.amazon.com/free/&quot;&gt;Free Tier&lt;/a&gt; that you can use for 12 months.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A former colleague of mine pointed me toward &lt;a href=&quot;http://acloud.guru&quot;&gt;A Cloud Guru&lt;/a&gt;, which has
some &lt;strong&gt;awesome&lt;/strong&gt; content to help you prepare for the AWS Certification tests.  I have been
working on the Certified Solutions Architect - Associate course for about 20 - 25 hours so far
and I&amp;#8217;m only 36% through.  And I watch most of it at a minimum of 1.3x speed, averaging 1.5x. :)  I&amp;#8217;m fairly confident that when I sit this exam, I&amp;#8217;m going to do very well, with these lectures
as background.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The more time I spend working in this area, the more it feels like this is what all of my
experience over the past 20+ years was destined for.  The combination of Servers, Software,
Networking and Architecture is all coming together.  The irony is that it is coming together
in a way that is going to make &quot;server administration&quot; obsolete.  We&amp;#8217;ll no longer manage
full-stack systems.  Store some data here, fire off some events there, run a bit of logic
wherever there&amp;#8217;s compute available, and string it all together server-less.  It&amp;#8217;s a bit
  wild, to be sure, but it&amp;#8217;s also very exciting.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s enough of a break for now.  I&amp;#8217;m off to study some more.  I was hoping to book a time
to sit the first exam next week, but being only 36% through, I might need a bit more time. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sage&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Wed, 15 Mar 2017 00:00:00 -0400</pubDate>
        <link>http://sagely.ca/2017/03/AWS_Certifications</link>
        <guid isPermaLink="true">http://sagely.ca/2017/03/AWS_Certifications</guid>
        
        <category>aws devops certification</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Tutorial for working with the Pwn9 Site Repo</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is probably not of interest to most people, but could be of interest to anyone who is interested in how I have set up our development environment.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This tutorial should help you get started developing on the Pwn9 website repository.  It gives you the basic details on how to get your environment set up.  It does &lt;strong&gt;not&lt;/strong&gt; tell you anything about how to actually work with the code base.  That will come in another tutorial. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I created a screencast of the process, which you can watch below:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;videoblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/kvrIG6E7N84?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;setup_for_windows_10&quot;&gt;Setup for Windows 10&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To begin, we&amp;#8217;ll need to install some tools.  Go and grab &lt;a href=&quot;https://git-scm.com/downloads&quot;&gt;Git&lt;/a&gt; and install it.  (The default settings should be fine).  Additionally, you will want to install &lt;a href=&quot;http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html&quot;&gt;Putty and it&amp;#8217;s tools&lt;/a&gt;, if you haven&amp;#8217;t got them already.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
Tremor has suggested that the &lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;Sourcefire&lt;/a&gt; client is more user-friendly for Windows users.  I don&amp;#8217;t have it in my video tutorial, but you can use that client if you wish, instead.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In order to clone the private repository, you will need to use an SSH Key.  If you have previously provided one to Sage, it will already be set up for your use.  You will need to copy your private key into the correct place for Git to be able to make use of it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, to run the server locally for testing, you will need to install &lt;a href=&quot;https://nodejs.org/&quot;&gt;node.js&lt;/a&gt;.  The exact version required will be specified in the &lt;code&gt;package.json&lt;/code&gt; file in the repository root.  At the time of this writing, we are using v6.9.4 LTS.  As with the other required software, the default installation options are fine.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;generating_an_ssh_key&quot;&gt;Generating an SSH Key&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s walk through the creation of your ssh key, if you don&amp;#8217;t have one, or lost yours.  If you have one, skip to the next section, below.  First, open the &quot;PuTTYgen&quot; application, and generate a new SSH-2 RSA key by clicking the &quot;Generate&quot; button.  You will need to move your mouse around a bunch to generate some randomness.  When it is done, you should see something like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot; style=&quot;text-align: center&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/img/post/putty_key.png&quot; alt=&quot;putty key&quot; width=&quot;50%&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You should then enter a passphrase, to protect your key.  If someone gets a hold of your keyfile, and there&amp;#8217;s no passphrase, they can use the key to impersonate you, and do BadThings(tm).  Once you&amp;#8217;ve added a passphrase, save the private key somewhere you&amp;#8217;ll be able to find it again.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;exporting_your_ssh_private_key_to_use_with_git&quot;&gt;Exporting your SSH Private Key to use with Git&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Open your key in the PuTTYgen tool.  Go to Conversions&amp;#8594;Export OpenSSH Key.  Save your private key in the C:\Users\&amp;lt;yourusername&amp;gt;\.ssh\ directory with a filename of: &quot;id_rsa&quot;.  (NOTE: If you already have an id_rsa here, you probably don&amp;#8217;t want to overwrite it.  If you don&amp;#8217;t know what to do at this point, go to Chinatown.  Ask for Caine.  He will help.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;cloning_the_repository&quot;&gt;Cloning the Repository&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To clone the repository, you launch the GitUI, and put the source repository name &lt;code&gt;git@pwn9.sagley.ca:pwn9site.git&lt;/code&gt; in the Source box, and You select a destination location on your computer.  Put it on your desktop, or your documents folder, or in C:\, it doesn&amp;#8217;t matter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To make changes, you&amp;#8217;ll want to check out the &lt;code&gt;develop&lt;/code&gt; branch as a new feature branch.  Do this in the Git Bash shell by cd&amp;#8217;ing to the folder you checked the code out into, and typing: &lt;code&gt;git checkout -b feature/&amp;lt;yourfeaturename&amp;gt; origin/develop&lt;/code&gt;.  This will create a new branch, based on the latest development branch.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;setting_up_node_modules&quot;&gt;Setting up Node modules&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After you have checked out the code repository, you will need to downlod/build the modules required for the application to run.  You can do this either in the Node.js Command Prompt, or a regular Command Prompt.  cd to the directory where the application was cloned, and run the npm install command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a 'cmd' shell:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;C:\Users\sage&amp;gt;cd C:\Users\sage\Desktop\pwn9Site
C:\Users\sage&amp;gt;npm install&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a 'bash' shell:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;gt; cd /c/Users/sage/Desktop/pwn9site
&amp;gt; npm install

This will take quite some time to download all of the required modules and install them.  When this step is complete, you can start work on development.&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;building_the_application&quot;&gt;Building the Application&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks to the very nice tutorials done by James Shore on his &lt;a href=&quot;http://letscodejavascript.com/&quot;&gt;Let&amp;#8217;s Code Javascript&lt;/a&gt; site, I decided to use his &lt;a href=&quot;https://github.com/jamesshore/automatopia&quot;&gt;automatopia&lt;/a&gt; skeleton to set up this site.  What this provides is a good starting point for a basic workflow, test framework, and build system without locking into anything.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The build tool is called &lt;a href=&quot;http://jakejs.com/&quot;&gt;jake&lt;/a&gt;, and it is roughly equivalent to &quot;make&quot; or &quot;rake&quot; (but not &quot;shake&quot; and &quot;bake&quot;).  Tasks are defined in javascript, and you can get a list of them by typing &lt;code&gt;./jake.sh -T&lt;/code&gt; (unix shell) or &lt;code&gt;jake -T&lt;/code&gt; (windows cmd).  You&amp;#8217;ll get a nice list of build tasks, and their descriptions:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;jake default               Lint and test
jake run                   Start server (for manual testing)
jake clean                 Delete generated files
jake lint                  Lint everything
jake karma                 Start Karma server -- run this first
jake test                  Run tests
jake build                 Build distribution package
jake version               Check Node version&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To build the code base, we can run &lt;code&gt;jake build&lt;/code&gt;.  Or, we can execute &lt;code&gt;jake run&lt;/code&gt;, which will build the code, and start a local web server that you can use to do testing on.  You can reach the server by using your web browser to visit: &lt;a href=&quot;http://localhost:5000&quot;&gt;http://localhost:5000&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you&amp;#8217;ve done all the previous steps correctly, you should see the latest development version of the site.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The video tutorial will show you how to make a small change and push a commit, but I&amp;#8217;m going to discuss that in the next part of the tutorial, with the whole workflow.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;See [Part 2 Coming soon!] of the tutorial for more.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 28 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2017/01/pwn9site-tutorial</link>
        <guid isPermaLink="true">http://sagely.ca/2017/01/pwn9site-tutorial</guid>
        
        <category>nodejs ansible git windows pwn9</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Node.js Ansible Deployment Workflow</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Pwn9.com&amp;#8217;s website ran on Drupal for years.  Recently, the backend just stopped responding to requests, and after spending about 30 minutes trying to figure out what was hosed, I gave up.  We had long been intending to replace the Drupal site with something else, and this seemed like a good enough motivation to do it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Both Tremor and I have become interested in node.js, and we wanted to incorporate some webhooks, RESTful interfaces, etc.  You know&amp;#8230;&amp;#8203; The stuff all the k00lk1ds are using these days.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What follows is a description of the development &amp;#8594; production workflow that I&amp;#8217;ve set up.  There may very well be better ways of doing this, but this was the one I ended up with, because it appeals to my sensibilities.  (Tremor probably disagrees) :)  Well, tough bananas.  I&amp;#8217;m the one actually putting the time into it. :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The workflow relies on the following components:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Development Server from CloudAtCost&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Production Server on Linode&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ansible for automation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node.js &amp;amp; NPM for application&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PM2 to manage the Node.js App&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx for reverse-proxy to the nodejs app&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git &amp;amp; Gitolite for version control / repo&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At a high level, the workflow will look like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Clone or pull from the private gitolite-based repository&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checkout dev branch.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hack on the code.  Test.  Repeat until it&amp;#8217;s shippable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit changes and push dev branch back to gitolite repo.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A githook will fire, notifying the CI machine to build/test the code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If the tests pass, the code will automatically be promoted to the staging server at pwn9.sagely.ca by executing an ansible playbook against the development environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In theory, additional production-readiness testing can be done against the staging server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once the dev is confident that the changes are ready for production, the dev requests that a Manager promotes it to production (at the moment, that is just me.  Maybe tremor)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promotion to production involves running an ansible playbook against the production environment.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are going to use a similar Git model to this one: &lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot; class=&quot;bare&quot;&gt;http://nvie.com/posts/a-successful-git-branching-model/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To simplify the automated build system, we are going to use the following nomenclature:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;master&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Release only branch.  ALL changes that go in here will be releases and automatically pushed to production. (eek!)  Nothing gets into here before rigorous testing.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;fix/&amp;lt;bugid&amp;gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;For fixes to specific bugs.  Where should we track the issues?  Trello?  These branches will be based off the &lt;code&gt;master&lt;/code&gt; branch and will be committed to &lt;code&gt;master&lt;/code&gt; as well as &lt;code&gt;develop&lt;/code&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;develop&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;This branch is where all new features and updates will be merged into.  All changes pushed to the repo in one of the branches below will automatically be built and tested by Jenkins, and if the build passes will be auto-merged into this branch.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;feature/&amp;lt;featurename&amp;gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;For big features, eg: new authentication, new game API, etc.  These branches will be made off the &lt;code&gt;develop&lt;/code&gt; branch, and will be automatically be integrated when builds are pushed and passed.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;update/&amp;lt;name&amp;gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;For smaller updates, eg: to page styling, layout, etc.  These branches will be made off the &lt;code&gt;develop&lt;/code&gt; branch, and will be automatically be integrated when builds are pushed and passed.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So, if, for example, you wish to add a new feature, you would:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;shell&quot;&gt;$ git checkout -b feature/awesome-new-feature develop
# This creates a new branch 'feature/awesome-new-feature' based on the 'develop' branch&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sun, 22 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2017/01/Nodejs_Ansible_Deployment_Workflow</link>
        <guid isPermaLink="true">http://sagely.ca/2017/01/Nodejs_Ansible_Deployment_Workflow</guid>
        
        <category>nodejs ansible deployment pm2 pwn9 git githooks nginx</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Social Notworking</title>
        <description>&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The other day something happened that has been weighing heavily on me and I need to write about it to process my thoughts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I got into an argument with a friend on Facebook.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, gentle reader, you may say:  &quot;What&amp;#8217;s so unusual about that?  It happens all the time.&quot;  True, but in this case, I attacked my friend in a way that is very uncharacteristic of me.  I usually work hard to craft my argument to articulate my perspective on issues in a civilized way conducive to broadening understanding.  This time, however, I was just a jerk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;trigger&quot;&gt;Trigger&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The new year rolled around and brought with it new things to complain about.  The political spin machine kicked into high gear, partisan groups started creating memes, and people started sharing them.  The first one I saw annoyed me with its lack of perspective and inflammatory tone.  The second one added fuel to the fire.  By the fifth one, my frustration for them had built to the point where I was unable to restrain the beast inside that yearns to get people to think about big problems, rather than complain about them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
I&amp;#8217;m not smarter than your average bear.  I don&amp;#8217;t think that &lt;strong&gt;my&lt;/strong&gt; world view is  right, nor do I believe that there is a &quot;right&quot; answer to any sufficiently complex societal issue.  If you want an idea of where I stand on issues, you can get an idea in my post on &lt;a href=&quot;/2017/01/Politics&quot;&gt;My Politics&lt;/a&gt;.  But, don&amp;#8217;t.  Really.  It will just give you and I something (else?) to disagree about.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The straw that broke the camels back turned out to be a meme about taxes that showed up in my feed.  If you want an idea of the type of post it was, &lt;a href=&quot;https://www.facebook.com/Justintrudeaunope&quot;&gt;here is the FB Page it came from&lt;/a&gt;.  I can&amp;#8217;t tell you exactly why these memes rub me the wrong way, but they do.  I think it&amp;#8217;s because they appeal to our emotions, rather than our intellect, and I feel that they manipulate us into being sheeple about issues we should be taking the time to think deeply about and discuss rationally.  I had had enough, and needed to say something.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;mistake&quot;&gt;Mistake&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What I did next was innocent enough, I thought.  I wanted to broaden the conversation, so I posted a link to a book that I found thanks to a post from &lt;a href=&quot;https://fee.org/articles/why-does-mike-rowe-love-this-economics-book/&quot;&gt;Mike Rowe during the 2016 US Presidential Election&lt;/a&gt;.  The book is &lt;a href=&quot;https://en.wikipedia.org/wiki/Economics_in_One_Lesson&quot;&gt;Economics in One Lesson by Henry Hazlitt&lt;/a&gt;.  I thought this was a fantastic book that went right to the heart of many popular misconceptions, and would really stimulate a better discussion than a meme war.  I didn&amp;#8217;t post any commentary, just the link (which facebook added a preview of the cover to):&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&quot;fb-post&quot; class=&quot;paragraph&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Facebook Post&lt;/div&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/img/post/Social_Notworking_fbpost.png&quot; alt=&quot;Social Notworking fbpost&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The response I got surprised me:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m not even going to read this. I have run numerous multi-million dollar businesses with great success, and have a solid reputation for financials. I understand economics. Please don&amp;#8217;t try to make me feel like I don&amp;#8217;t understand. If you feel my understanding isn&amp;#8217;t to your level, then don&amp;#8217;t feel you have to comment on, or even look at my postings. My opinion is my opinion, and yours is yours.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m not sure what made my friend thinks I was trying to be superior.  I guess it was the lack of context around why I posted that book.  If I had taken the time to think about the message I really wanted to deliver, I probably would have posted something like this, with the link to the book underneath:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&quot;Nobody likes taxes, but we need to consider the grand economic picture; We need government services.  I get the impression that you are not supportive of the current government and I respect your opinion, so I&amp;#8217;d like to discuss this further.  What policy changes do you think could be made that would improve the situation without destabilizing an already shaky economy?  Here&amp;#8217;s a book I read recently that really changed the way I think about economic policy, and it might be a good reference for such a discussion&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But alas, I didn&amp;#8217;t say that.  And maybe even that would have been taken offensively.  So, my link to the book was taken as an insult.  Hey, no big deal, just apologize and explain yourself, and all will be good.  My response started with:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It wasn&amp;#8217;t intended as an insult. I discovered this book this year, and I found it very enlightening. It changed my viewpoint on a LOT of misconceptions I had about how economic policy worked.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &quot;one lesson&quot; is: &quot;The art of economics consists in looking not merely at the immediate but at the longer effects of any act or policy; it consists in tracing the consequences of that policy not merely for one group but for all groups.&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How that actually applies to various real-world problems is quite interesting, and the author explores that through the rest of the book. You can download the book in PDF form for free here: &lt;a href=&quot;http://www.hacer.org/pdf/Hazlitt00.pdf&quot; class=&quot;bare&quot;&gt;http://www.hacer.org/pdf/Hazlitt00.pdf&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;descent&quot;&gt;Descent&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This wasn&amp;#8217;t how I ended my comment, though.  It was late, I&amp;#8217;m tired, and I&amp;#8217;m not thinking rationally.  My annoyance with the &quot;meme wars&quot; in my feed has set me in a bad mood.  My (broken) thought process at this point was: &quot;Here&amp;#8217;s someone who is spreading memes that are undermining the public discourse on important issues, and they don&amp;#8217;t even want to have an informed opinion on things.&quot;  So, in an attempt to make my point, I added the text below. In doing so, I completely undermined everything I was trying to accomplish:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;lt;snarky&amp;gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Don&amp;#8217;t read it, though. You clearly know everything there is to know about economic policy, so there&amp;#8217;s no point in wasting time trying to broaden your knowledge. Just go out there and fight &quot;the man&quot; with your memes. I looking forward to the next election when Canada elects our Populist government with our home-born equivalent of Trump thanks to the inflammatory meme, righteous indignance and content-free arguments that social media enables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;lt;/snarky&amp;gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is my hope that one day, society will reward well researched, analyzed and presented arguments on social media. I don&amp;#8217;t have much faith, but &quot;Rebellions are built on hope&quot;, so I&amp;#8217;m trying to stay optimistic.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;revelation&quot;&gt;Revelation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that&amp;#8217;s when it hit me&amp;#8230;&amp;#8203; The meme trolls (the creators, not the people they use) dragged me down to their level and beat me with experience.  They &lt;em&gt;knew&lt;/em&gt; that by appealing to our frustration, anger, fear and hate through their inflammatory messages that they could manipulate us and control the conversation.  And they had beaten me.  They used my own frustration against me, and made me turn my friend against me.  If I had &lt;strong&gt;anything&lt;/strong&gt; of value to say, it was never going to be listened to, now.  I had alienated my friend from me, and from my viewpoint on important matters.  This person may never read that book, because it&amp;#8217;s attached to the opinions of an arrogant jerk.  Those are my words, not theirs.  Actually, their words were:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I never once proclaimed that I knew everything. However I am very educated on the matter. I approach situations with an open mind before I form my opinions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All I can say right now is 'wow'. You and I have know each other a long time, and I wouldn&amp;#8217;t ever say a fraction of what you just said to me to you. Snarky in your words. I call it condescending superiority complex you know everything and want people to view things the same way as you.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My page. My opinion. An educated one. If you don&amp;#8217;t like it, please unfriend me.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And not that I have to justify myself to anyone, I will here. I read books. I read articles written by different sides. I am very informed, thank you very much.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;pause_reflect&quot;&gt;Pause.  Reflect.&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is where I hit the &lt;strong&gt;Emergency Stop&lt;/strong&gt; button.  I probably should have hit it 3 floors earlier in the descent, but I was tired, and the part of my brain responsible for discipline had apparently already gone to sleep.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My realization that I had just exhibited the very behaviour I challenge others on bothered me.  More than that, I had attacked someone&amp;#8217;s character and behaved disrespectfully toward them.  This is not me.  Sure, I get passionate about things, but being &quot;snarky&quot; and disrespectful in social media is not who I want to be.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So I took a break.  I posted one more comment, then resolved not to say anything more until I had processed things:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m sorry for taking out my frustration on you. My Facebook feed was full of memes and rhetoric today and no facts. Just inflammatory comments that support populist agendas. I guess it got to me, and my snark directed at you was really a result of my frustration with the way that people just share a sound bite, a meme, or other social media thing that supports their opinion without actually thinking about it, presenting facts, analyzing the information, and engaging in civil discourse about it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m going to give myself a time-out from Facebook now, because I have clearly lost my own perspective today.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An admission of guilt, partially negated by an attempt to justify my actions.  Not even close to an apology.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;apology&quot;&gt;Apology&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I thought for a long time about this.  What did I really want to say?  At this point, the original disagreement had fallen into insignificance in comparison to the new one I had created.  The only thing I needed to do was to apologize sincerely and unconditionally.  The next day, I left the following comment on the thread:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wanted to take a little time to think about what I wanted to say about my comments on this post. It has consumed a great deal of my thought the past 24 hours, and I think I have figured out what I want to say about them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am sorry. I was disrespectful toward you in my comments and it was neither fair, nor appropriate. My words were an attack on your character that don&amp;#8217;t represent you, nor how I feel about you and I am embarrassed by them. I would ask your forgiveness, but do not think I deserve it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I exhibited the very behaviour that I try to convince others not to do online. I am still trying to figure out how I allowed myself to get upset enough to lash out in frustration at someone I respect.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;My friend publicly accepted my apology, but the impact this incident has made will last a long time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This whole situation was a result of me forgetting to live the lesson I learned from my favourite parable which I have included below, in case you&amp;#8217;ve never seen it before.  The moral is one that I learned as a teenager, and one that is very important to me.  My recent failure in adhering to it is a lesson to me to always work hard at being the person I want to be.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Nails in the Fence&lt;/div&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There once was a little boy who had a bad temper. His father gave him a bag of nails and told him that every time he lost his temper, he must hammer a nail into the back of the fence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first day the boy had driven 37 nails into the fence. Over the next few weeks, as he learned to control his anger, the number of nails hammered daily gradually dwindled down. He discovered it was easier to hold his temper than to drive those nails into the fence.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally the day came when the boy didn’t lose his temper at all. He told his father about it and the father suggested that the boy now pull out one nail for each day that he was able to hold his temper. The days passed and the young boy was finally able to tell his father that all the nails were gone.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The father took his son by the hand and led him to the fence. He said, “You have done well, my son, but look at the holes in the fence. The fence will never be the same. When you say things in anger, they leave a scar just like this one. You can put a knife in a man and draw it out. It won’t matter how many times you say I’m sorry, the wound is still there.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The little boy then understood how powerful his words were. He looked up at his father and said, “I hope you can forgive me father for the holes I put in you.”&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;“Of course I can,” said the father.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&amp;#8212; Author Unknown&lt;br&gt;
&lt;cite&gt;https://luckypennylayne.com/2012/05/08/nails-in-the-fence/&lt;/cite&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Mon, 09 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2017/01/Social_Notworking</link>
        <guid isPermaLink="true">http://sagely.ca/2017/01/Social_Notworking</guid>
        
        <category>socialnetworking</category>
        
        <category>politics</category>
        
        <category>trolls</category>
        
        <category>argument</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>My Politics</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;my_political_motivations&quot;&gt;My Political Motivations&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What I seek out of government policy is prioritized below.  There is joviality in my writing.  If you can&amp;#8217;t figure out where I&amp;#8217;m being serious, and when I&amp;#8217;m kidding, you probably shouldn&amp;#8217;t be reading this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This list is incomplete. From time to time, I review this list and apply any &quot;current opinion&quot; against them.  I then either adjust my opinion or this list, based on which I feel is less correct with the available information at that moment in time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wonder how many people do something similar?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Random Quote&lt;/div&gt;
&lt;blockquote&gt;
Data is not information, information is not knowledge, knowledge is not understanding, understanding is not wisdom.
&lt;/blockquote&gt;
&lt;div class=&quot;attribution&quot;&gt;
&amp;#8212; Clifford Stoll
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;my_list&quot;&gt;My List&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
It is my prerogative &lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnote_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt; to update this as my thought process evolves.  I&amp;#8217;m sure this will grow significantly over time.  YOU can contribute to this by making comments below &lt;strong&gt;after&lt;/strong&gt; you have read the whole text.  They must be intelligent and rational, and based on data, where appropriate.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In my view, in descending order of priority, Governmental policies:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;MUST NOT contribute to the long-term destruction of our species, unless that is inevitable, in which case, let&amp;#8217;s go out in a blaze of glory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD NOT be manipulable to the advantage of any person or special interest group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD motivate individuals to work together for the best mutual outcomes, and apply &lt;a href=&quot;https://en.wikipedia.org/wiki/Game_theory&quot;&gt;Game Theory&lt;/a&gt; where appropriate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD be biased toward intelligent, rational decision making, and biased against irrational and uninformed opinions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD, when forced, attempt to sove the &lt;a href=&quot;https://en.wikipedia.org/wiki/Trolley_problem&quot;&gt;Trolley Problem&lt;/a&gt; in a way which creates the minimal amount of suffering for the largest group of people.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD encourage people to contribute to society in positive ways.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SHOULD encourage people to pursue enterprises which allow them to achieve goals.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnote_1&quot;&gt;
&lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt;. I just learned the correct spelling of this today
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2017/01/Politics</link>
        <guid isPermaLink="true">http://sagely.ca/2017/01/Politics</guid>
        
        <category>politics</category>
        
        <category>social</category>
        
        <category>opinion</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Ansible to Manage Personal Servers</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have a lot of hobbies.  In the Venn diagram of my hobbies, the circle labelled
&quot;Nerdy&quot; is disproportionately large.  What that means, for me, is that I have a
large number of computing systems to manage.  I am a principal member of the
&lt;a href=&quot;http://pwn9.com&quot;&gt;Pwn9.com&lt;/a&gt; gaming community,  I have a home NAS that runs a number
of services, such as my &lt;a href=&quot;http://sagetv.com/&quot;&gt;SageTV&lt;/a&gt; installation, a
&lt;a href=&quot;http://dirvish.org&quot;&gt;Dirvish&lt;/a&gt; backup server (which backs up all the other servers)
A &lt;a href=&quot;https://ci.sagely.ca&quot;&gt;Jenkins CI server&lt;/a&gt;, A number of web servers, Minecraft
servers, and a handful of other things.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Managing all of these as one-off&amp;#8217;s is cumbersome.  Sometimes, I don&amp;#8217;t touch some
of these services for months, or even a year.  Others, I&amp;#8217;m messing with daily.
I needed a system to handle Administration of the services, without adding too
much to my workload.  My other motivation was the fact that I wanted to become
more familiar with Server Automation options, which have developed significantly
since I was a Sysadmin in the 90&amp;#8217;s using &lt;a href=&quot;http://cfengine.com&quot;&gt;CFEngine&lt;/a&gt;.  (Kudos
to the CFEngine folks for still going strong!)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Initially, I spent a lot of time working with the Open Source version of
&lt;a href=&quot;https://puppet.com/&quot;&gt;Puppet&lt;/a&gt;.  It looks like a great tool for large-scale
deployments, but trying to run Puppet &quot;masterless&quot; just proved too difficult in
my environment.  I wanted something that didn&amp;#8217;t require a server to be 24/7
accessible.  I tried running the Puppet Master on my &lt;a href=&quot;http://freenas.org/&quot;&gt;FreeNAS&lt;/a&gt;
system in a jail, but I just kept running into obstacles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;He said we wouldn&amp;#8217;t get it. He said we wouldn&amp;#8217;t get the treasure we seek
on account of our obstacles.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&amp;#8201;&amp;#8212;&amp;#8201;Pete, O Brother, Where Art Thou?&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I looked briefly at Chef, but it seemed more like Puppet, in terms of required
infrastructure.  Ansible got my attention not just because it was written in
Python, one of my preferred languages.  It was a lot lighter-weight, it didn&amp;#8217;t
require a centralized trusted server, and it had a lot fewer rules.  So all of
the ad-hoc tasks I need to run are no problem.  In fact, Ansible encourages me
to keep working in a very ad-hoc way, but allows me to add automation and process
to the things I was already doing.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I spent a lot of time just playing around with Ansible, and becoming familiar
with it&amp;#8217;s philosophy, and function.  As you would expect, the &lt;a href=&quot;https://docs.ansible.com/&quot;&gt;Ansible Docs&lt;/a&gt;
are a great place to start.  I also heavily rely on the Ansible docsets in &lt;a href=&quot;https://kapeli.com/dash&quot;&gt;Dash.app&lt;/a&gt;
which are indispensable while learning the ins and outs, and in day to day use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I decided to use the &lt;a href=&quot;http://asciidoctor.org/docs/&quot;&gt;development version&lt;/a&gt;, so I
could get all the latest and greatest modules, etc.  Since nothing in my
infrastructure is particularly critical, I figured I could handle any bugs without
much issue. (Incidentally, I haven&amp;#8217;t found any in almost a year of using the
dev version.) Instructions below are taken from the Ansible Docs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;shell&quot;&gt;$ git clone git://github.com/ansible/ansible.git --recursive
$ cd ./ansible

# Bash environment setup (adapt if you are using a different shell)
$ source ./hacking/env-setup

# Make sure python dependencies are installed
$ sudo pip install paramiko PyYAML Jinja2 httplib2 six&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That should install ansible on your system.  We can test by setting up our local
host in a hosts file, and running the ansible &quot;ping&quot; module:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;CodeRay highlight&quot;&gt;&lt;code data-lang=&quot;shell&quot;&gt;# If you were in the ansible checkout directory, go back up to the main dir.
$ cd ..

$ echo &amp;quot;127.0.0.1&amp;quot; &amp;gt; ansible_hosts
$ ansible -i ansible_hosts -m ping all --ask-pass
SSH password:
127.0.0.1 | SUCCESS =&amp;gt; {
    &amp;quot;changed&amp;quot;: false,
    &amp;quot;ping&amp;quot;: &amp;quot;pong&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &quot;SUCCESS&quot; message indicates that Ansible can talk to our host (127.0.0.1) via
ssh, successfully logged in as the current user, and the password we provided at
the &quot;SSH password:&quot; prompt was correct.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This will give you a basic ansible setup to start hacking on.  I have set up a
git repo with a copy of my setup, which you can use to follow along, if you wish.
You can get it by running the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;git clone --recursive git://github.com/ptoal/ansible-example&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
It is important to include the &quot;--recursive&quot; option to get a copy of the
ansible repo.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I will create Git &quot;Tags&quot; for each tutorial post in this blog.  The first tag,
matching this post, is called &quot;Intro&quot;.  It will give you a directory with a single
file, ansible_hosts, with one host entry (127.0.0.1).  Additionally, with the --recurse
flag, it will clone the ansible repo into an 'ansible' subdirectory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the next post, I&amp;#8217;ll talk about how I use &lt;a href=&quot;http://vagrantup.com&quot;&gt;Vagrant&lt;/a&gt; and
&lt;a href=&quot;http://virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; to mock up all of my servers before I actually
deploy them to a hosting provider.  This combination allows you to iterate over
your ansible changes quickly, allowing you to identify errors in your ansible setup
before pushing out to a production server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Until next time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;-Sage&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Mon, 02 Jan 2017 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2017/01/Ansible_to_Manage_Personal_Servers</link>
        <guid isPermaLink="true">http://sagely.ca/2017/01/Ansible_to_Manage_Personal_Servers</guid>
        
        <category>ansible</category>
        
        <category>automation</category>
        
        <category>servers</category>
        
        <category>python</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Jekyll and Asciidoc</title>
        <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I wished to create a blog that would be easy enough to maintain that I would
 actually take the time to contribute to it.  In order for that to happen,
 I decided that it would require the following:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Static page generation (no backend DB&amp;#8217;s, no CMS, etc)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Editable from a plain text editor anywhere. (Content is King)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Checked into version control&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easily published automatically after a commit.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This has led me, after much musing, to a combination of Jekyll, Asciidoc, and
GitHub Pages.  The blog you see before you today is a result of those choices.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;git&quot;&gt;Git&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; is my VCS of choice, and has been for almost a decade.
Pretty much a no-brainer.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;github_pages&quot;&gt;Github Pages&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I decided that I would use &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; for hosting.
The pro&amp;#8217;s for this choice were:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Free&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Static&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Long-lasting&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extremely low maintenance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I already have a Github account&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I have, over the years, had web sites which were maintained with Django, Wordpress,
and other back-ends, but every one of them falls behind in security patches,
plugin versions, etc.  I wanted something that I could leave for months at a time,
if necessary, and then just pick up my text editor, and publish, without having
to worry about managing any code.  Github Pages is always on, and I don&amp;#8217;t need
to manage anything except DNS records, and my Git repository.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nice.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This decision was borne out of the Github Pages decision.  &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;
is a static site generator written in Ruby, and supported by Github Pages natively.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Unfortunately my next decision, to use Asciidoc, required that I not use the built-in
integration.  Not to worry, though.  I found a workaround that still meets my goal
to have automatic publishing based on a &lt;code&gt;git push&lt;/code&gt;, without requiring any of my
own infrastructure.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;asciidoc&quot;&gt;Asciidoc&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is where I stray from the beaten path.  Many people like to use Markdown
(or one of it&amp;#8217;s patchwork offspring).  I have nothing against Markdown, execpt
for the fact that there really isn&amp;#8217;t &lt;em&gt;a&lt;/em&gt; markdown. &lt;a href=&quot;http://commonmark.org/&quot;&gt;CommonMark&lt;/a&gt;
is promising, but not widely supported.  Also, it doesn&amp;#8217;t have nearly the power
of &lt;a href=&quot;http://asciidoctor.org/docs/what-is-asciidoc/&quot;&gt;Asciidoc&lt;/a&gt; for other tasks,
like writing comprehensive technical documentation, one of my other use-cases.
One of the drawbacks to learning a text-based markup language like Markdown,
ReStructured Text, and others is that each dialect is similar enough to be
stored in the same area of the brain, but has enough differences that they often
get muddled up (in my head, anyway). So you end up using a Markdown idiom
when writing ReST, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;By deciding on one language to rule them all, I am forsaking all others (not
really, since other people still use them, and I don&amp;#8217;t live in my own world).
At least, I am hopeful that by focusing on Asciidoc as my primary dialect, I will
not make as many mistakes when I am using it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;travis&quot;&gt;Travis&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As I chose Asciidoc, I could not use the Github integration for Jekyll, as they
don&amp;#8217;t support the &lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;Asciidoc plugin&lt;/a&gt;.
I&amp;#8217;m not sure why, and there are a number of
people who, I am sure, have asked them to reconsider, but for now, that means
that I need an external way of building my site.  Fortunately, there are some
great tutorials on how to use &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis&lt;/a&gt; to execute builds
that are triggered by Github Hooks.  The one I followed is
&lt;a href=&quot;https://eshepelyuk.github.io/2014/10/28/automate-github-pages-travisci.html&quot;&gt;this one&lt;/a&gt;
by Evgeny Shepelyuk.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;putting_it_all_together&quot;&gt;Putting it all together&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What the workflow looks like when all this is glued together is:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Clone Github Repo &amp;#8594; Edit in IntelliJ IDEA (or whatever I have handy) &amp;#8594;
Push to Github &amp;#8594; Hook fired to Travis &amp;#8594; Travis executes the Jekyll build and
pushes to the Github master repo &amp;#8594; Profit.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I will be documenting this process in more detail, for those who would like to
replicate my setup.  For now, however, there are a great many tutorials online
that can talk about the individual steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Also, I didn&amp;#8217;t discuss anything about themes or artwork.  That&amp;#8217;s probably an
entire topic on its own.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Until next time&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;-Sage&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 31 Dec 2016 00:00:00 -0500</pubDate>
        <link>http://sagely.ca/2016/12/Jekyll-and-AsciiDoc</link>
        <guid isPermaLink="true">http://sagely.ca/2016/12/Jekyll-and-AsciiDoc</guid>
        
        <category>jekyll</category>
        
        <category>asciidoc</category>
        
        <category>github</category>
        
        <category>travis</category>
        
        <category>blog</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>What is Sagely?</title>
        <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Sagely is the way I try to approach challenges in life.  That&amp;#8217;s not to say that
I consider myself particularly wise, but that I aspire to approach things the way
I imagine someone who is wise would do.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What you&amp;#8217;ll find here is a collection of posts about Coding, Gaming, and perhaps
some general Philosophy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is a place for me to put my general musing, some of which may be useful to
others, I hope. Occasionally, there may also be contributions from guest authors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I can be contacted via Twitter, as well as on Discord.app, where I am often
found in the &lt;a href=&quot;https://discord.gg/0yT9UMxwlebCcR5t&quot;&gt;Pwn9&lt;/a&gt; server as Sage905.&lt;/p&gt;
&lt;/div&gt;</description>
        <pubDate>Sat, 25 Jun 2016 00:00:00 -0400</pubDate>
        <link>http://sagely.ca/2016/06/What-is-Sagely</link>
        <guid isPermaLink="true">http://sagely.ca/2016/06/What-is-Sagely</guid>
        
        
        <category>life</category>
        
      </item>
    
  </channel>
</rss>
